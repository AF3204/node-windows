Ext.data.JsonP.global({"tagname":"class","name":"global","mixins":[],"alternateClassNames":[],"members":{"cfg":[],"property":[],"method":[{"name":"createExe","tagname":"method","owner":"global","meta":{},"id":"method-createExe"},{"name":"generateXml","tagname":"method","owner":"global","meta":{},"id":"method-generateXml"},{"name":"launch","tagname":"method","owner":"global","meta":{},"id":"method-launch"},{"name":"monitor","tagname":"method","owner":"global","meta":{},"id":"method-monitor"}],"event":[],"css_var":[],"css_mixin":[]},"aliases":{},"meta":{},"files":[{"filename":"","href":""}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'><p>Global variables and functions.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createExe' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/winsw.html#global-method-createExe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-createExe' class='name expandable'>createExe</a>( <span class='pre'>name, [dir], [callback]</span> )</div><div class='description'><div class='short'>Create the executable ...</div><div class='long'><p>Create the executable</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The alphanumeric string (spaces are stripped) of the <code>.exe</code> file. For example, <code>My App</code> generates <code>myapp.exe</code></p>\n</div></li><li><span class='pre'>dir</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>The output directory where the executable will be saved.</p>\n<p>Defaults to: <code>cwd</code></p></div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>The callback to fire upon completion.</p>\n</div></li></ul></div></div></div><div id='method-generateXml' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/winsw.html#global-method-generateXml' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-generateXml' class='name expandable'>generateXml</a>( <span class='pre'>config</span> )</div><div class='description'><div class='short'>Generate the XML for the winsw configuration file. ...</div><div class='long'><p>Generate the XML for the winsw configuration file.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The config object must have the following attributes:</p>\n\n<ul>\n<li><em>id</em> This is is how the service is identified. Alphanumeric, no spaces.</li>\n<li><em>name</em> The descriptive name of the service.</li>\n<li><em>script</em> The absolute path of the node.js script. i.e. <code>C:\\path\\to\\myService.js</code></li>\n</ul>\n\n\n<p>Optional attributes include</p>\n\n<ul>\n<li><em>description</em> The description that shows up in the service manager.</li>\n<li><em>flags</em> Any flags that should be passed to node. Defaults to <code>--harmony</code> to add ES6 support.</li>\n<li><em>logmode</em> Valid values include <code>rotate</code> (default), <code>reset</code> (clear log), <code>roll</code> (move to .old), and <code>append</code>.</li>\n<li><em>logpath</em> The absolute path to the directory where logs should be stored. Defaults to the current directory.</li>\n<li><em>dependencies</em> A comma delimited list or array of process dependencies.</li>\n<li><em>env</em> A key/value object or array of key/value objects containing\nenvironment variables to pass to the process. The object might look like <code>{name:'HOME',value:'c:\\Windows'}</code>.</li>\n</ul>\n\n</div></li></ul></div></div></div><div id='method-launch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/wrapper.html#global-method-launch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-launch' class='name expandable'>launch</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>A method to start a process. ...</div><div class='long'><p>A method to start a process.</p>\n</div></div></div><div id='method-monitor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='global'>global</span><br/><a href='source/wrapper.html#global-method-monitor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/global-method-monitor' class='name expandable'>monitor</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Monitor the process to make sure it is running ...</div><div class='long'><p>Monitor the process to make sure it is running</p>\n</div></div></div></div></div></div></div>"});