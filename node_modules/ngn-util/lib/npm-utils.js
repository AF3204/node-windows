var exec = require('child_process').exec,
    execSync = require('exec-sync'),
    Seq = require('seq'),
    path = require('path');
require('colors');

var __root = null,
    getNpmGlobalRoot = function(){
      if(__root == null){
        __root = execSync("npm prefix -g");
      } 
      return __root;
    };

var installSync = function(config) {
  config.name = config.name || '';
  
  var originaldir = __dirname;
  
  if (!config.hasOwnProperty('global')){
    config.global = false;
  }
  
  if (!config.hasOwnProperty('registry')){
    config.registry = null;
  }
  
  config.hideoutput = config.hasOwnProperty('hideoutput') ? config.hideoutput : false;
  
  if (!config.hideoutput){
    console.log(('\nInstalling '+(config.name||config.package)+'... ').cyan+'\n[Please wait - this may take a moment]'.blue.bold);
  }
  
  try {
    execSync("npm config set strict-ssl false");
    execSync('npm --loglevel error '+(config.registry !== null ? "--registry "+config.registry+" " : "")+"install "+config.package+(config.global == true ? " -g" : ""));
    execSync("npm config set strict-ssl true");
    if (!config.hideoutput){
      console.log('Complete'.green);
    }
    return;
  } catch(e) {
    console.log(('\nError installing '+(config.name||config.package)+':').red.bold);
    if (e.message.indexOf('is not in the npm registry') >= 0){
      throw new Error(config.package+' does not exist or could not be found in the npm registry.');
    } else if (e.message.indexOf('node-gyp rebuild')){
      throw new Error(config.package+' was found but could not be built.');
    } else {
      throw e;
    }
  }
}

var install = function(config,successFn){
  
  successFn = successFn || function(){};
  
  config.name = config.name || '';
  
  if (!config.hasOwnProperty('global')){
    config.global = false;
  }
  
  if (!config.hasOwnProperty('registry')){
    config.registry = null;
  }
  
  config.hideoutput = config.hasOwnProperty('hideoutput') ? config.hideoutput : false;
  
  if (!config.hideoutput){
    console.log(('\nInstalling '+config.name+'... ').cyan+'\n[Please wait - this may take a moment]'.blue.bold);
  }
    
  exec("npm config set strict-ssl false",function(___e,___o,___err){
    exec("npm --loglevel error "+(config.registry !== null ? "--registry "+config.registry+" " : "")+"install "+config.package+(config.global == true ? " -g" : ""),function(error,out,err){
      exec("npm config set strict-ssl true",function(){
        if (error){
          console.log(('\nError installing '+(config.name||config.package)+':').red.bold);
          console.log(('('+error.code+') ').blue.bold+error.message);
          console.log(error);
        } else if (err.trim().length > 0){
          console.log(('\nError installing '+(config.name||config.package)+':').red.bold);
          throw err;
        } else if (!config.hideoutput){
          console.log('Complete.'.green);
        }
      });
    });
  });
};

var installed = function(module,root){
  root = root || require('path').join(process.cwd(),'node_modules');
  return {
    global: require('fs').existsSync(require('path').join(getNpmGlobalRoot(),'node_modules',module)),
    local: require('fs').existsSync(require('path').join(root,module))
  };
};

var remove = function(module,global,callback){
  callback = callback || function(){};
  global = global == undefined ? false : global;
  if (typeof global === 'function'){
    callback = global;
    global = false;
  }
  if (global){
    if (installed(module).global){
      require('wrench').rmdirSyncRecursive(require('path').join(getNpmGlobalRoot(),'node_modules',module),function(err){
        if (err) throw err;
        callback();
      });
    } else {
      callback();
    }
  } else {
    if (installed(module).local){
      require('fs').rmdir(require('path').join(process.cwd(),'node_modules',module),function(err){
        if (err) throw err;
        callback();
      });
    } else {
      callback();
    }
  }
};

var removeSync = function(module,global){
  global = global == undefined ? false : global;

  if (global){
    if (installed(module).global){
      require('wrench').rmdirSyncRecursive(require('path').join(getNpmGlobalRoot(),'node_modules',module));
    }
    return;
  } else {
    if (installed(module).local){
      require('fs').rmdirSync(require('path').join(process.cwd(),'node_modules',module));
    }
    return;
  }
};

module.exports = {
  installer: install,
  install: install,
  installed: installed,
  installSync: installSync,
  remove: remove,
  removeSync: removeSync,
  globalDirectory: getNpmGlobalRoot(),
  // Links one global module to another.
  globalLink: function(to,module,overwrite,callback){
    overwrite = typeof overwrite == 'boolean' ? overwrite : true;
    if (!overwrite){
      if (require('fs').existsSync(path.join(getNpmGlobalRoot(),'node_modules',to))){
        return;
      }
    }
    console.log("npm link "+module);
    exec("npm link "+module,{cwd:path.join(getNpmGlobalRoot(),'node_modules',to)},(callback||function(){}));
  }
};